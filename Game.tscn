[gd_scene load_steps=8 format=2]

[ext_resource path="res://water.tres" type="Material" id=1]

[sub_resource type="CubeMesh" id=1]
size = Vector3( 50, 2, 50 )

[sub_resource type="VisualShaderNodeColorConstant" id=2]
constant = Color( 0.63, 0.901333, 1, 1 )

[sub_resource type="VisualShaderNodeScalarConstant" id=5]
constant = 0.7

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;




void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.630000, 0.901333, 1.000000);
	float n_out2p1 = 1.000000;

// Scalar:3
	float n_out3p0 = 0.700000;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -382.628, -8.54657 )
nodes/fragment/0/position = Vector2( 400, 120 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -140, 120 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( -160, 220 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[sub_resource type="PlaneMesh" id=14]
material = ExtResource( 1 )
size = Vector2( 300, 300 )
subdivide_width = 64
subdivide_depth = 64

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4.90481, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 4 )

[node name="MeshInstance2" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.35349, 0 )
mesh = SubResource( 14 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.992386, 0.123168, 0, -0.123168, 0.992386, 0, 10.4351, -17.4267 )
