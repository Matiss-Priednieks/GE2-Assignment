[gd_resource type="ShaderMaterial" load_steps=37 format=2]

[ext_resource path="res://new_noisetexture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=44]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeColorConstant" id=7]
constant = Color( 0.0584087, 0.00273903, 0.942207, 1 )

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=36]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=37]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0, 0.1 ) ]

[sub_resource type="VisualShaderNodeInput" id=45]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarConstant" id=46]
constant = 0.05

[sub_resource type="VisualShaderNodeScalarOp" id=47]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=48]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 0.0, 1, 4.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=22]
default_input_values = [ 0, 4.0, 1, 0.0 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=24]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=25]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=26]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=27]

[sub_resource type="VisualShaderNodeInput" id=28]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=29]

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=34]

[sub_resource type="VisualShaderNodeInput" id=39]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarConstant" id=42]
constant = 3.0

[sub_resource type="VisualShaderNodeScalarOp" id=43]
operator = 2

[sub_resource type="VisualShaderNodeScalarInterp" id=49]

[sub_resource type="VisualShaderNodeScalarFunc" id=50]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=51]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=52]

[sub_resource type="VisualShaderNodeVectorCompose" id=53]

[sub_resource type="VisualShaderNodeScalarOp" id=54]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=55]
default_input_values = [ 0, 0.0, 1, 1.5 ]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=56]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=18]

[sub_resource type="VisualShaderNodeVectorDecompose" id=20]

[sub_resource type="VisualShader" id=8]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D tex_frg_3;



void vertex() {
// Input:18
	vec3 n_out18p0 = VERTEX;

// VectorDecompose:19
	float n_out19p0 = n_out18p0.x;
	float n_out19p1 = n_out18p0.y;
	float n_out19p2 = n_out18p0.z;

// Input:2
	vec3 n_out2p0 = VERTEX;

// VectorDecompose:6
	float n_out6p0 = n_out2p0.x;
	float n_out6p1 = n_out2p0.y;
	float n_out6p2 = n_out2p0.z;

// ScalarOp:11
	float n_in11p1 = 4.00000;
	float n_out11p0 = n_out6p0 + n_in11p1;

// ScalarFunc:14
	float n_out14p0 = cos(n_out11p0);

// Input:5
	vec3 n_out5p0 = VERTEX;

// VectorDecompose:8
	float n_out8p0 = n_out5p0.x;
	float n_out8p1 = n_out5p0.y;
	float n_out8p2 = n_out5p0.z;

// ScalarOp:12
	float n_in12p0 = 4.00000;
	float n_out12p0 = n_in12p0 + n_out8p2;

// ScalarFunc:13
	float n_out13p0 = sin(n_out12p0);

// ScalarOp:15
	float n_out15p0 = n_out14p0 * n_out13p0;

// ScalarOp:16
	float n_in16p1 = 2.00000;
	float n_out16p0 = n_out15p0 * n_in16p1;

// VectorCompose:17
	vec3 n_out17p0 = vec3(n_out19p0, n_out16p0, n_out19p2);

// Scalar:27
	float n_out27p0 = 3.000000;

// Input:24
	float n_out24p0 = TIME;

// ScalarOp:28
	float n_out28p0 = n_out27p0 * n_out24p0;

// ScalarMix:29
	float n_in29p1 = 1.00000;
	float n_in29p2 = 0.50000;
	float n_out29p0 = mix(n_out28p0, n_in29p1, n_in29p2);

// ScalarFunc:30
	float n_out30p0 = sin(n_out29p0);

// ScalarOp:31
	float n_in31p0 = 1.00000;
	float n_out31p0 = n_in31p0 * n_out30p0;

// VectorOp:22
	vec3 n_out22p0 = n_out17p0 + vec3(n_out31p0);

// VectorDecompose:32
	float n_out32p0 = n_out22p0.x;
	float n_out32p1 = n_out22p0.y;
	float n_out32p2 = n_out22p0.z;

// ScalarOp:36
	float n_in36p1 = 1.50000;
	float n_out36p0 = max(n_out31p0, n_in36p1);

// ScalarOp:35
	float n_out35p0 = n_out32p0 * n_out36p0;

// ScalarOp:37
	float n_out37p0 = n_out32p2 * n_out36p0;

// VectorCompose:34
	vec3 n_out34p0 = vec3(n_out35p0, n_out32p1, n_out37p0);

// Output:0
	VERTEX = n_out34p0;

}

void fragment() {
// Input:10
	vec3 n_out10p0 = vec3(UV, 0.0);

// Input:6
	float n_out6p0 = TIME;

// Scalar:7
	float n_out7p0 = 0.050000;

// ScalarOp:8
	float n_out8p0 = n_out6p0 * n_out7p0;

// VectorOp:9
	vec3 n_out9p0 = n_out10p0 - vec3(n_out8p0);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out9p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Color:2
	vec3 n_out2p0 = vec3(0.058409, 0.002739, 0.942207);
	float n_out2p1 = 1.000000;

// VectorOp:4
	vec3 n_out4p0 = n_out3p0 * n_out2p0;

// VectorOp:5
	vec3 n_in5p1 = vec3(0.00000, 0.00000, 0.10000);
	vec3 n_out5p0 = n_out4p0 + n_in5p1;

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -852.816, 211.705 )
nodes/vertex/0/position = Vector2( 2060, -160 )
nodes/vertex/2/node = SubResource( 15 )
nodes/vertex/2/position = Vector2( -720, 160 )
nodes/vertex/5/node = SubResource( 17 )
nodes/vertex/5/position = Vector2( -780, 360 )
nodes/vertex/6/node = SubResource( 18 )
nodes/vertex/6/position = Vector2( -480, 100 )
nodes/vertex/8/node = SubResource( 20 )
nodes/vertex/8/position = Vector2( -520, 320 )
nodes/vertex/11/node = SubResource( 21 )
nodes/vertex/11/position = Vector2( -240, 80 )
nodes/vertex/12/node = SubResource( 22 )
nodes/vertex/12/position = Vector2( -280, 260 )
nodes/vertex/13/node = SubResource( 23 )
nodes/vertex/13/position = Vector2( -20, 240 )
nodes/vertex/14/node = SubResource( 24 )
nodes/vertex/14/position = Vector2( -40, 60 )
nodes/vertex/15/node = SubResource( 25 )
nodes/vertex/15/position = Vector2( 140, 80 )
nodes/vertex/16/node = SubResource( 26 )
nodes/vertex/16/position = Vector2( 400, 40 )
nodes/vertex/17/node = SubResource( 27 )
nodes/vertex/17/position = Vector2( 880, -80 )
nodes/vertex/18/node = SubResource( 28 )
nodes/vertex/18/position = Vector2( 100, -220 )
nodes/vertex/19/node = SubResource( 29 )
nodes/vertex/19/position = Vector2( 500, -160 )
nodes/vertex/22/node = SubResource( 34 )
nodes/vertex/22/position = Vector2( 1300, -100 )
nodes/vertex/24/node = SubResource( 39 )
nodes/vertex/24/position = Vector2( 160, 480 )
nodes/vertex/27/node = SubResource( 42 )
nodes/vertex/27/position = Vector2( 80, 360 )
nodes/vertex/28/node = SubResource( 43 )
nodes/vertex/28/position = Vector2( 340, 280 )
nodes/vertex/29/node = SubResource( 49 )
nodes/vertex/29/position = Vector2( 600, 260 )
nodes/vertex/30/node = SubResource( 50 )
nodes/vertex/30/position = Vector2( 820, 200 )
nodes/vertex/31/node = SubResource( 51 )
nodes/vertex/31/position = Vector2( 1100, 140 )
nodes/vertex/32/node = SubResource( 52 )
nodes/vertex/32/position = Vector2( 1540, -60 )
nodes/vertex/34/node = SubResource( 53 )
nodes/vertex/34/position = Vector2( 1840, 40 )
nodes/vertex/35/node = SubResource( 54 )
nodes/vertex/35/position = Vector2( 1740, -220 )
nodes/vertex/36/node = SubResource( 55 )
nodes/vertex/36/position = Vector2( 1360, 180 )
nodes/vertex/37/node = SubResource( 56 )
nodes/vertex/37/position = Vector2( 1680, 220 )
nodes/vertex/connections = PoolIntArray( 2, 0, 6, 0, 5, 0, 8, 0, 6, 0, 11, 0, 8, 2, 12, 1, 11, 0, 14, 0, 12, 0, 13, 0, 14, 0, 15, 0, 13, 0, 15, 1, 15, 0, 16, 0, 18, 0, 19, 0, 17, 0, 22, 0, 24, 0, 28, 1, 19, 0, 17, 0, 16, 0, 17, 1, 19, 2, 17, 2, 27, 0, 28, 0, 28, 0, 29, 0, 29, 0, 30, 0, 31, 0, 22, 1, 22, 0, 32, 0, 32, 1, 34, 1, 34, 0, 0, 0, 35, 0, 34, 0, 30, 0, 31, 1, 32, 0, 35, 0, 31, 0, 36, 0, 36, 0, 35, 1, 32, 2, 37, 0, 36, 0, 37, 1, 37, 0, 34, 2 )
nodes/fragment/0/position = Vector2( 680, 80 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( 20, 420 )
nodes/fragment/3/node = SubResource( 35 )
nodes/fragment/3/position = Vector2( 0, 120 )
nodes/fragment/4/node = SubResource( 36 )
nodes/fragment/4/position = Vector2( 240, 80 )
nodes/fragment/5/node = SubResource( 37 )
nodes/fragment/5/position = Vector2( 420, 120 )
nodes/fragment/6/node = SubResource( 45 )
nodes/fragment/6/position = Vector2( -800, 480 )
nodes/fragment/7/node = SubResource( 46 )
nodes/fragment/7/position = Vector2( -820, 620 )
nodes/fragment/8/node = SubResource( 47 )
nodes/fragment/8/position = Vector2( -500, 520 )
nodes/fragment/9/node = SubResource( 48 )
nodes/fragment/9/position = Vector2( -260, 300 )
nodes/fragment/10/node = SubResource( 44 )
nodes/fragment/10/position = Vector2( -720, 260 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 2, 0, 4, 1, 4, 0, 5, 0, 5, 0, 0, 0, 7, 0, 8, 1, 10, 0, 9, 0, 8, 0, 9, 1, 9, 0, 3, 0, 6, 0, 8, 0 )

[resource]
shader = SubResource( 8 )
