[gd_resource type="ShaderMaterial" load_steps=35 format=2]

[ext_resource path="res://new_noisetexture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=44]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=59]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=60]
constant = Color( 0.083023, 0.271966, 0.555037, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=78]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.35 ]
operator = 9

[sub_resource type="VisualShaderNodeTexture" id=79]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=80]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.35 ]
operator = 9

[sub_resource type="VisualShaderNodeVectorInterp" id=81]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorConstant" id=7]
constant = Color( 0.202464, 0.546876, 0.86871, 1 )

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=82]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.0, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=83]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 9

[sub_resource type="VisualShaderNodeScalarFunc" id=84]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeTexture" id=35]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=45]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarConstant" id=46]
constant = 0.01

[sub_resource type="VisualShaderNodeScalarOp" id=47]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=48]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeInput" id=61]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=62]

[sub_resource type="VisualShaderNodeScalarFunc" id=63]
function = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=64]

[sub_resource type="VisualShaderNodeScalarUniform" id=66]
uniform_name = "Amplitude"
hint = 1
min = 1.0
max = 10.0
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeScalarUniform" id=67]
uniform_name = "Wavelength"
hint = 1
min = 1.0
max = 100.0
default_value_enabled = true
default_value = 25.0

[sub_resource type="VisualShaderNodeScalarOp" id=68]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=69]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=70]
constant = 2.0

[sub_resource type="VisualShaderNodeScalarConstant" id=71]
constant = 3.14159

[sub_resource type="VisualShaderNodeScalarOp" id=72]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=73]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=74]
uniform_name = "Speed"
default_value_enabled = true
default_value = 25.0

[sub_resource type="VisualShaderNodeInput" id=75]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=76]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=77]
operator = 2

[sub_resource type="VisualShader" id=8]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform float Amplitude : hint_range(1, 10) = 1;
uniform float Wavelength : hint_range(1, 100) = 25;
uniform float Speed = 25;
uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_17;



void vertex() {
// Input:38
	vec3 n_out38p0 = VERTEX;

// VectorDecompose:39
	float n_out39p0 = n_out38p0.x;
	float n_out39p1 = n_out38p0.y;
	float n_out39p2 = n_out38p0.z;

// ScalarUniform:44
	float n_out44p0 = Amplitude;

// Scalar:48
	float n_out48p0 = 2.000000;

// Scalar:49
	float n_out49p0 = 3.141593;

// ScalarUniform:45
	float n_out45p0 = Wavelength;

// ScalarOp:50
	float n_out50p0 = n_out49p0 / n_out45p0;

// ScalarOp:47
	float n_out47p0 = n_out48p0 * n_out50p0;

// Input:53
	float n_out53p0 = TIME;

// ScalarUniform:52
	float n_out52p0 = Speed;

// ScalarOp:55
	float n_out55p0 = n_out53p0 * n_out52p0;

// ScalarOp:54
	float n_out54p0 = n_out39p0 - n_out55p0;

// ScalarOp:51
	float n_out51p0 = n_out47p0 * n_out54p0;

// ScalarFunc:41
	float n_out41p0 = sin(n_out51p0);

// ScalarOp:46
	float n_out46p0 = n_out44p0 * n_out41p0;

// VectorCompose:42
	vec3 n_out42p0 = vec3(n_out39p0, n_out46p0, n_out39p2);

// Output:0
	VERTEX = n_out42p0;

}

void fragment() {
// Input:10
	vec3 n_out10p0 = vec3(UV, 0.0);

// Input:6
	float n_out6p0 = TIME;

// ScalarFunc:22
	float n_out22p0 = sin(n_out6p0);

// Scalar:7
	float n_out7p0 = 0.010000;

// ScalarOp:8
	float n_out8p0 = n_out22p0 * n_out7p0;

// VectorOp:9
	vec3 n_out9p0 = n_out10p0 - vec3(n_out8p0);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out9p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// ScalarOp:18
	float n_in18p1 = 0.35000;
	float n_out18p0 = step(dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)), n_in18p1);

// ScalarOp:21
	float n_in21p1 = 0.50000;
	float n_out21p0 = step(dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)), n_in21p1);

// ScalarSmoothStep:20
	float n_in20p2 = 0.50000;
	float n_out20p0 = smoothstep(n_out18p0, n_out21p0, n_in20p2);

// Color:2
	vec3 n_out2p0 = vec3(0.202464, 0.546876, 0.868710);
	float n_out2p1 = 1.000000;

// VectorMix:19
	vec3 n_in19p2 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out19p0 = mix(vec3(n_out20p0), n_out2p0, n_in19p2);

// Color:14
	vec3 n_out14p0 = vec3(0.083023, 0.271966, 0.555037);
	float n_out14p1 = 1.000000;

// VectorOp:13
	vec3 n_out13p0 = n_out19p0 * n_out14p0;

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, UV.xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// ScalarOp:15
	float n_in15p1 = 0.35000;
	float n_out15p0 = step(dot(n_out17p0, vec3(0.333333, 0.333333, 0.333333)), n_in15p1);

// Output:0
	ALBEDO = n_out13p0;
	ALPHA = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333));
	SPECULAR = n_out15p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -687.759, -213.396 )
nodes/vertex/0/position = Vector2( 1540, 160 )
nodes/vertex/38/node = SubResource( 61 )
nodes/vertex/38/position = Vector2( -300, 420 )
nodes/vertex/39/node = SubResource( 62 )
nodes/vertex/39/position = Vector2( 20, 500 )
nodes/vertex/41/node = SubResource( 63 )
nodes/vertex/41/position = Vector2( 860, 240 )
nodes/vertex/42/node = SubResource( 64 )
nodes/vertex/42/position = Vector2( 1240, 340 )
nodes/vertex/44/node = SubResource( 66 )
nodes/vertex/44/position = Vector2( 520, -140 )
nodes/vertex/45/node = SubResource( 67 )
nodes/vertex/45/position = Vector2( -620, 240 )
nodes/vertex/46/node = SubResource( 68 )
nodes/vertex/46/position = Vector2( 1020, 100 )
nodes/vertex/47/node = SubResource( 69 )
nodes/vertex/47/position = Vector2( 200, 80 )
nodes/vertex/48/node = SubResource( 70 )
nodes/vertex/48/position = Vector2( -60, 0 )
nodes/vertex/49/node = SubResource( 71 )
nodes/vertex/49/position = Vector2( -500, 80 )
nodes/vertex/50/node = SubResource( 72 )
nodes/vertex/50/position = Vector2( -220, 160 )
nodes/vertex/51/node = SubResource( 73 )
nodes/vertex/51/position = Vector2( 680, 200 )
nodes/vertex/52/node = SubResource( 74 )
nodes/vertex/52/position = Vector2( -300, 620 )
nodes/vertex/53/node = SubResource( 75 )
nodes/vertex/53/position = Vector2( -240, 540 )
nodes/vertex/54/node = SubResource( 76 )
nodes/vertex/54/position = Vector2( 320, 260 )
nodes/vertex/55/node = SubResource( 77 )
nodes/vertex/55/position = Vector2( -20, 300 )
nodes/vertex/connections = PoolIntArray( 38, 0, 39, 0, 39, 2, 42, 2, 42, 0, 0, 0, 39, 0, 42, 0, 44, 0, 46, 0, 41, 0, 46, 1, 46, 0, 42, 1, 48, 0, 47, 0, 49, 0, 50, 0, 45, 0, 50, 1, 50, 0, 47, 1, 47, 0, 51, 0, 51, 0, 41, 0, 39, 0, 54, 0, 52, 0, 55, 1, 53, 0, 55, 0, 55, 0, 54, 1, 54, 0, 51, 1 )
nodes/fragment/0/position = Vector2( 1280, -80 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( 40, 300 )
nodes/fragment/3/node = SubResource( 35 )
nodes/fragment/3/position = Vector2( -560, 0 )
nodes/fragment/6/node = SubResource( 45 )
nodes/fragment/6/position = Vector2( -1680, 200 )
nodes/fragment/7/node = SubResource( 46 )
nodes/fragment/7/position = Vector2( -1740, 400 )
nodes/fragment/8/node = SubResource( 47 )
nodes/fragment/8/position = Vector2( -1080, 340 )
nodes/fragment/9/node = SubResource( 48 )
nodes/fragment/9/position = Vector2( -820, 120 )
nodes/fragment/10/node = SubResource( 44 )
nodes/fragment/10/position = Vector2( -1240, 20 )
nodes/fragment/13/node = SubResource( 59 )
nodes/fragment/13/position = Vector2( 760, 80 )
nodes/fragment/14/node = SubResource( 60 )
nodes/fragment/14/position = Vector2( 560, 340 )
nodes/fragment/15/node = SubResource( 78 )
nodes/fragment/15/position = Vector2( 720, -260 )
nodes/fragment/17/node = SubResource( 79 )
nodes/fragment/17/position = Vector2( 360, -300 )
nodes/fragment/18/node = SubResource( 80 )
nodes/fragment/18/position = Vector2( -280, -140 )
nodes/fragment/19/node = SubResource( 81 )
nodes/fragment/19/position = Vector2( 280, 80 )
nodes/fragment/20/node = SubResource( 82 )
nodes/fragment/20/position = Vector2( 20, -80 )
nodes/fragment/21/node = SubResource( 83 )
nodes/fragment/21/position = Vector2( -280, 120 )
nodes/fragment/22/node = SubResource( 84 )
nodes/fragment/22/position = Vector2( -1460, 220 )
nodes/fragment/connections = PoolIntArray( 7, 0, 8, 1, 10, 0, 9, 0, 9, 0, 3, 0, 14, 0, 13, 1, 13, 0, 0, 0, 17, 0, 15, 0, 15, 0, 0, 4, 2, 0, 19, 1, 19, 0, 13, 0, 3, 0, 18, 0, 18, 0, 20, 0, 3, 0, 21, 0, 21, 0, 20, 1, 20, 0, 19, 0, 6, 0, 22, 0, 22, 0, 8, 0, 8, 0, 9, 1, 3, 0, 0, 1 )

[resource]
resource_local_to_scene = true
shader = SubResource( 8 )
shader_param/Amplitude = 1.0
shader_param/Wavelength = 40.0
shader_param/Speed = 20.0
